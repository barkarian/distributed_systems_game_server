function t(){}function n(t,n){for(const e in n)t[e]=n[e];return t}function e(t){return t()}function o(){return Object.create(null)}function r(t){t.forEach(e)}function s(t){return"function"==typeof t}function u(t,n){return t!=t?n==n:t!==n||t&&"object"==typeof t||"function"==typeof t}function c(n,e,o){n.$$.on_destroy.push(function(n,...e){if(null==n)return t;const o=n.subscribe(...e);return o.unsubscribe?()=>o.unsubscribe():o}(e,o))}function i(t,n,e,o){if(t){const r=a(t,n,e,o);return t[0](r)}}function a(t,e,o,r){return t[1]&&r?n(o.ctx.slice(),t[1](r(e))):o.ctx}function f(t,n,e,o,r,s,u){const c=function(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(void 0===n.dirty)return r;if("object"==typeof r){const t=[],e=Math.max(n.dirty.length,r.length);for(let o=0;o<e;o+=1)t[o]=n.dirty[o]|r[o];return t}return n.dirty|r}return n.dirty}(n,o,r,s);if(c){const r=a(n,e,o,u);t.p(r,c)}}function l(t,n,e=n){return t.set(e),n}function d(t,n){t.appendChild(n)}function h(t,n,e){t.insertBefore(n,e||null)}function p(t){t.parentNode.removeChild(t)}function $(t,n){for(let e=0;e<t.length;e+=1)t[e]&&t[e].d(n)}function g(t){return document.createElement(t)}function m(t){return document.createTextNode(t)}function y(){return m(" ")}function b(){return m("")}function _(t,n,e,o){return t.addEventListener(n,e,o),()=>t.removeEventListener(n,e,o)}function x(t){return function(n){return n.preventDefault(),t.call(this,n)}}function w(t,n,e){null==e?t.removeAttribute(n):t.getAttribute(n)!==e&&t.setAttribute(n,e)}function k(t,n,e){const o=new Set;for(let r=0;r<t.length;r+=1)t[r].checked&&o.add(t[r].__value);return e||o.delete(n),Array.from(o)}function v(t){return Array.from(t.childNodes)}function E(t,n,e,o){for(let r=0;r<t.length;r+=1){const o=t[r];if(o.nodeName===n){let n=0;const s=[];for(;n<o.attributes.length;){const t=o.attributes[n++];e[t.name]||s.push(t.name)}for(let t=0;t<s.length;t++)o.removeAttribute(s[t]);return t.splice(r,1)[0]}}return o?function(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}(n):g(n)}function A(t,n){for(let e=0;e<t.length;e+=1){const o=t[e];if(3===o.nodeType)return o.data=""+n,t.splice(e,1)[0]}return m(n)}function S(t){return A(t," ")}function j(t,n){n=""+n,t.wholeText!==n&&(t.data=n)}function M(t,n){t.value=null==n?"":n}let N;function O(t){N=t}function T(){if(!N)throw new Error("Function called outside component initialization");return N}function C(t){T().$$.before_update.push(t)}function L(t){T().$$.on_mount.push(t)}function q(t){T().$$.after_update.push(t)}function z(t){T().$$.on_destroy.push(t)}function B(t,n){T().$$.context.set(t,n)}const D=[],F=[],P=[],G=[],H=Promise.resolve();let I=!1;function J(t){P.push(t)}let K=!1;const Q=new Set;function R(){if(!K){K=!0;do{for(let t=0;t<D.length;t+=1){const n=D[t];O(n),U(n.$$)}for(O(null),D.length=0;F.length;)F.pop()();for(let t=0;t<P.length;t+=1){const n=P[t];Q.has(n)||(Q.add(n),n())}P.length=0}while(D.length);for(;G.length;)G.pop()();I=!1,K=!1,Q.clear()}}function U(t){if(null!==t.fragment){t.update(),r(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(J)}}const V=new Set;let W;function X(){W={r:0,c:[],p:W}}function Y(){W.r||r(W.c),W=W.p}function Z(t,n){t&&t.i&&(V.delete(t),t.i(n))}function tt(t,n,e,o){if(t&&t.o){if(V.has(t))return;V.add(t),W.c.push((()=>{V.delete(t),o&&(e&&t.d(1),o())})),t.o(n)}}function nt(t,n){t.d(1),n.delete(t.key)}function et(t,n,e,o,r,s,u,c,i,a,f,l){let d=t.length,h=s.length,p=d;const $={};for(;p--;)$[t[p].key]=p;const g=[],m=new Map,y=new Map;for(p=h;p--;){const t=l(r,s,p),c=e(t);let i=u.get(c);i?o&&i.p(t,n):(i=a(c,t),i.c()),m.set(c,g[p]=i),c in $&&y.set(c,Math.abs(p-$[c]))}const b=new Set,_=new Set;function x(t){Z(t,1),t.m(c,f),u.set(t.key,t),f=t.first,h--}for(;d&&h;){const n=g[h-1],e=t[d-1],o=n.key,r=e.key;n===e?(f=n.first,d--,h--):m.has(r)?!u.has(o)||b.has(o)?x(n):_.has(r)?d--:y.get(o)>y.get(r)?(_.add(o),x(n)):(b.add(r),d--):(i(e,u),d--)}for(;d--;){const n=t[d];m.has(n.key)||i(n,u)}for(;h;)x(g[h-1]);return g}function ot(t,n){const e={},o={},r={$$scope:1};let s=t.length;for(;s--;){const u=t[s],c=n[s];if(c){for(const t in u)t in c||(o[t]=1);for(const t in c)r[t]||(e[t]=c[t],r[t]=1);t[s]=c}else for(const t in u)r[t]=1}for(const u in o)u in e||(e[u]=void 0);return e}function rt(t){return"object"==typeof t&&null!==t?t:{}}function st(t){t&&t.c()}function ut(t,n){t&&t.l(n)}function ct(t,n,o,u){const{fragment:c,on_mount:i,on_destroy:a,after_update:f}=t.$$;c&&c.m(n,o),u||J((()=>{const n=i.map(e).filter(s);a?a.push(...n):r(n),t.$$.on_mount=[]})),f.forEach(J)}function it(t,n){const e=t.$$;null!==e.fragment&&(r(e.on_destroy),e.fragment&&e.fragment.d(n),e.on_destroy=e.fragment=null,e.ctx=[])}function at(t,n){-1===t.$$.dirty[0]&&(D.push(t),I||(I=!0,H.then(R)),t.$$.dirty.fill(0)),t.$$.dirty[n/31|0]|=1<<n%31}function ft(n,e,s,u,c,i,a=[-1]){const f=N;O(n);const l=n.$$={fragment:null,ctx:null,props:i,update:t,not_equal:c,bound:o(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(f?f.$$.context:[]),callbacks:o(),dirty:a,skip_bound:!1};let d=!1;if(l.ctx=s?s(n,e.props||{},((t,e,...o)=>{const r=o.length?o[0]:e;return l.ctx&&c(l.ctx[t],l.ctx[t]=r)&&(!l.skip_bound&&l.bound[t]&&l.bound[t](r),d&&at(n,t)),e})):[],l.update(),d=!0,r(l.before_update),l.fragment=!!u&&u(l.ctx),e.target){if(e.hydrate){const t=v(e.target);l.fragment&&l.fragment.l(t),t.forEach(p)}else l.fragment&&l.fragment.c();e.intro&&Z(n.$$.fragment),ct(n,e.target,e.anchor,e.customElement),R()}O(f)}class lt{$destroy(){it(this,1),this.$destroy=t}$on(t,n){const e=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return e.push(n),()=>{const t=e.indexOf(n);-1!==t&&e.splice(t,1)}}$set(t){var n;this.$$set&&(n=t,0!==Object.keys(n).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}export{q as A,L as B,X as C,Y as D,c as E,i as F,f as G,_ as H,et as I,r as J,nt as K,l as L,M,x as N,s as O,k as P,z as Q,F as R,lt as S,$ as T,C as U,v as a,A as b,E as c,p as d,g as e,h as f,d as g,j as h,ft as i,y as j,b as k,S as l,n as m,t as n,w as o,st as p,ut as q,ct as r,u as s,m as t,ot as u,rt as v,Z as w,tt as x,it as y,B as z};
