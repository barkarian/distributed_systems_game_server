const e={waitForInputStart:0,pieceClickedThreshold:1,clickTo:2,secondClickThreshold:3,dragTo:4,clickDragTo:5,moveDone:6,reset:7},t="secondClick",s="movedOutOfBoard";class i{constructor(t,s,i,r,a,n){this.view=t,this.state=s,this.props=i,this.moveStartCallback=r,this.moveDoneCallback=a,this.moveCanceledCallback=n,this.setMoveInputState(e.waitForInputStart)}setMoveInputState(t,s){const i=this.moveInputState;switch(this.moveInputState=t,t){case e.waitForInputStart:break;case e.pieceClickedThreshold:if(e.waitForInputStart!==i)throw new Error("moveInputState");if(this.startIndex=s.index,this.endIndex=void 0,this.movedPiece=s.piece,this.updateStartEndMarkers(),this.startPoint=s.point,this.pointerMoveListener||this.pointerUpListener)throw Error("_pointerMoveListener or _pointerUpListener");if("mousedown"===s.type)this.pointerMoveListener=this.onPointerMove.bind(this),this.pointerMoveListener.type="mousemove",window.addEventListener("mousemove",this.pointerMoveListener),this.pointerUpListener=this.onPointerUp.bind(this),this.pointerUpListener.type="mouseup",window.addEventListener("mouseup",this.pointerUpListener);else{if("touchstart"!==s.type)throw Error("event type");this.pointerMoveListener=this.onPointerMove.bind(this),this.pointerMoveListener.type="touchmove",window.addEventListener("touchmove",this.pointerMoveListener),this.pointerUpListener=this.onPointerUp.bind(this),this.pointerUpListener.type="touchend",window.addEventListener("touchend",this.pointerUpListener)}break;case e.clickTo:this.draggablePiece&&(l.removeElement(this.draggablePiece),this.draggablePiece=void 0),i===e.dragTo&&this.view.setPieceVisibility(s.index);break;case e.secondClickThreshold:if(e.clickTo!==i)throw new Error("moveInputState");this.startPoint=s.point;break;case e.dragTo:if(e.pieceClickedThreshold!==i)throw new Error("moveInputState");this.view.chessboard.state.inputEnabled&&(this.view.setPieceVisibility(s.index,!1),this.createDraggablePiece(s.piece));break;case e.clickDragTo:if(e.secondClickThreshold!==i)throw new Error("moveInputState");this.view.chessboard.state.inputEnabled&&(this.view.setPieceVisibility(s.index,!1),this.createDraggablePiece(s.piece));break;case e.moveDone:if(-1===[e.dragTo,e.clickTo,e.clickDragTo].indexOf(i))throw new Error("moveInputState");if(this.endIndex=s.index,this.endIndex&&this.moveDoneCallback(this.startIndex,this.endIndex)){const t=this.state.squares.slice(0);this.state.setPiece(this.startIndex,void 0),this.state.setPiece(this.endIndex,this.movedPiece),i===e.clickTo?(this.updateStartEndMarkers(),this.view.animatePieces(t,this.state.squares.slice(0),(()=>{this.setMoveInputState(e.reset)}))):(this.view.drawPieces(this.state.squares),this.setMoveInputState(e.reset))}else this.view.drawPiecesDebounced(),this.setMoveInputState(e.reset);break;case e.reset:this.startIndex&&!this.endIndex&&this.movedPiece&&this.state.setPiece(this.startIndex,this.movedPiece),this.startIndex=void 0,this.endIndex=void 0,this.movedPiece=void 0,this.updateStartEndMarkers(),this.draggablePiece&&(l.removeElement(this.draggablePiece),this.draggablePiece=void 0),this.pointerMoveListener&&(window.removeEventListener(this.pointerMoveListener.type,this.pointerMoveListener),this.pointerMoveListener=void 0),this.pointerUpListener&&(window.removeEventListener(this.pointerUpListener.type,this.pointerUpListener),this.pointerUpListener=void 0),this.setMoveInputState(e.waitForInputStart);break;default:throw Error(`moveInputState ${t}`)}}createDraggablePiece(e){if(this.draggablePiece)throw Error("draggablePiece exists");this.draggablePiece=l.createSvg(document.body),this.draggablePiece.classList.add("cm-chessboard-draggable-piece"),this.draggablePiece.setAttribute("width",this.view.squareWidth),this.draggablePiece.setAttribute("height",this.view.squareHeight),this.draggablePiece.setAttribute("style","pointer-events: none"),this.draggablePiece.name=e;const t=this.props.sprite.cache?"":this.props.sprite.url,s=l.addElement(this.draggablePiece,"use",{href:`${t}#${e}`}),i=this.view.squareHeight/this.props.sprite.size,r=this.draggablePiece.createSVGTransform();r.setScale(i,i),s.transform.baseVal.appendItem(r)}moveDraggablePiece(e,t){this.draggablePiece.setAttribute("style",`pointer-events: none; position: absolute; left: ${e-this.view.squareHeight/2}px; top: ${t-this.view.squareHeight/2}px`)}onPointerDown(t){if("mousedown"===t.type&&0===t.button||"touchstart"===t.type){const s=t.target.getAttribute("data-index"),i=this.view.getPiece(s);let r,a;if(i&&(r=i.getAttribute("data-piece"),a=r?r.substr(0,1):void 0,("w"===a&&this.state.inputWhiteEnabled||"b"===a&&this.state.inputBlackEnabled)&&t.preventDefault()),void 0!==s&&(this.moveInputState!==e.waitForInputStart||this.state.inputWhiteEnabled&&"w"===a||this.state.inputBlackEnabled&&"b"===a)){let i;"mousedown"===t.type?i={x:t.clientX,y:t.clientY}:"touchstart"===t.type&&(i={x:t.touches[0].clientX,y:t.touches[0].clientY}),this.moveInputState===e.waitForInputStart&&r&&this.moveStartCallback(s)?this.setMoveInputState(e.pieceClickedThreshold,{index:s,piece:r,point:i,type:t.type}):this.moveInputState===e.clickTo&&(s===this.startIndex?this.setMoveInputState(e.secondClickThreshold,{index:s,piece:r,point:i,type:t.type}):this.setMoveInputState(e.moveDone,{index:s}))}}}onPointerMove(t){let s,i,r,a,n;if("mousemove"===t.type?(r=t.clientX,a=t.clientY,s=t.pageX,i=t.pageY,n=t.target):"touchmove"===t.type&&(r=t.touches[0].clientX,a=t.touches[0].clientY,s=t.touches[0].pageX,i=t.touches[0].pageY,n=document.elementFromPoint(r,a)),this.moveInputState===e.pieceClickedThreshold||this.moveInputState===e.secondClickThreshold)(Math.abs(this.startPoint.x-r)>4||Math.abs(this.startPoint.y-a)>4)&&(this.moveInputState===e.secondClickThreshold?this.setMoveInputState(e.clickDragTo,{index:this.startIndex,piece:this.movedPiece}):this.setMoveInputState(e.dragTo,{index:this.startIndex,piece:this.movedPiece}),this.view.chessboard.state.inputEnabled&&this.moveDraggablePiece(s,i));else if(this.moveInputState===e.dragTo||this.moveInputState===e.clickDragTo||this.moveInputState===e.clickTo){if(n&&n.getAttribute&&n.parentElement===this.view.boardGroup){const e=n.getAttribute("data-index");e!==this.startIndex&&e!==this.endIndex?(this.endIndex=e,this.updateStartEndMarkers()):e===this.startIndex&&void 0!==this.endIndex&&(this.endIndex=void 0,this.updateStartEndMarkers())}else void 0!==this.endIndex&&(this.endIndex=void 0,this.updateStartEndMarkers());!this.view.chessboard.state.inputEnabled||this.moveInputState!==e.dragTo&&this.moveInputState!==e.clickDragTo||this.moveDraggablePiece(s,i)}}onPointerUp(i){let r;if("mouseup"===i.type?r=i.target:"touchend"===i.type&&(r=document.elementFromPoint(i.changedTouches[0].clientX,i.changedTouches[0].clientY)),r&&r.getAttribute){const i=r.getAttribute("data-index");i?this.moveInputState===e.dragTo||this.moveInputState===e.clickDragTo?this.startIndex===i?this.moveInputState===e.clickDragTo?(this.state.setPiece(this.startIndex,this.movedPiece),this.view.setPieceVisibility(this.startIndex),this.setMoveInputState(e.reset)):this.setMoveInputState(e.clickTo,{index:i}):this.setMoveInputState(e.moveDone,{index:i}):this.moveInputState===e.pieceClickedThreshold?this.setMoveInputState(e.clickTo,{index:i}):this.moveInputState===e.secondClickThreshold&&(this.setMoveInputState(e.reset),this.moveCanceledCallback(t,i)):(this.view.drawPiecesDebounced(),this.setMoveInputState(e.reset),this.moveCanceledCallback(s,void 0))}else this.view.drawPiecesDebounced(),this.setMoveInputState(e.reset)}updateStartEndMarkers(){this.state.removeMarkers(void 0,g.move),this.startIndex&&this.state.addMarker(this.startIndex,g.move),this.endIndex&&this.state.addMarker(this.endIndex,g.move),this.view.drawMarkersDebounced()}reset(){this.setMoveInputState(e.reset)}destroy(){this.reset()}}const r=0,a=1,n=2;function o(){}class h{constructor(e,t,s,i,r){if(this.view=e,this.view.animationRunning)throw new o;t&&s&&(this.animatedElements=this.createAnimation(t,s),this.duration=i,this.callback=r,this.view.animationRunning=!0,this.frameHandle=requestAnimationFrame(this.animationStep.bind(this)))}seekChanges(e,t){const s=[],i=[],o=[];for(let r=0;r<64;r++){const a=e[r],n=t[r];n!==a&&(n&&s.push({piece:n,index:r}),a&&i.push({piece:a,index:r}))}return s.forEach((e=>{let t,s=8;i.forEach((i=>{if(e.piece===i.piece){const r=this.squareDistance(e.index,i.index);r<s&&(t=i,s=r)}})),t?(i.splice(i.indexOf(t),1),o.push({type:r,piece:e.piece,atIndex:t.index,toIndex:e.index})):o.push({type:a,piece:e.piece,atIndex:e.index})})),i.forEach((e=>{o.push({type:n,piece:e.piece,atIndex:e.index})})),o}createAnimation(e,t){const s=this.seekChanges(e,t),i=[];return s.forEach((e=>{const t={type:e.type};switch(e.type){case r:t.element=this.view.getPiece(e.atIndex),t.atPoint=this.view.squareIndexToPoint(e.atIndex),t.toPoint=this.view.squareIndexToPoint(e.toIndex);break;case a:t.element=this.view.drawPiece(e.atIndex,e.piece),t.element.style.opacity=0;break;case n:t.element=this.view.getPiece(e.atIndex)}i.push(t)})),i}animationStep(e){this.startTime||(this.startTime=e);const t=e-this.startTime;t<=this.duration?this.frameHandle=requestAnimationFrame(this.animationStep.bind(this)):(cancelAnimationFrame(this.frameHandle),this.view.animationRunning=!1,this.callback());const s=Math.min(1,t/this.duration),i=s<.5?2*s*s:(4-2*s)*s-1;this.animatedElements.forEach((e=>{if(e.element)switch(e.type){case r:e.element.transform.baseVal.removeItem(0);const t=this.view.svg.createSVGTransform();t.setTranslate(e.atPoint.x+(e.toPoint.x-e.atPoint.x)*i,e.atPoint.y+(e.toPoint.y-e.atPoint.y)*i),e.element.transform.baseVal.appendItem(t);break;case a:e.element.style.opacity=i;break;case n:e.element.style.opacity=1-i}else console.warn("animatedItem has no element",e)}))}squareDistance(e,t){const s=e%8,i=Math.floor(e/8),r=t%8,a=Math.floor(t/8);return Math.max(Math.abs(a-i),Math.abs(r-s))}}const d=["a1","b1","c1","d1","e1","f1","g1","h1","a2","b2","c2","d2","e2","f2","g2","h2","a3","b3","c3","d3","e3","f3","g3","h3","a4","b4","c4","d4","e4","f4","g4","h4","a5","b5","c5","d5","e5","f5","g5","h5","a6","b6","c6","d6","e6","f6","g6","h6","a7","b7","c7","d7","e7","f7","g7","h7","a8","b8","c8","d8","e8","f8","g8","h8"];class c{constructor(e,t){this.animationRunning=!1,this.currentAnimation=void 0,this.chessboard=e,this.moveInput=new i(this,e.state,e.props,this.moveStartCallback.bind(this),this.moveDoneCallback.bind(this),this.moveCanceledCallback.bind(this)),this.animationQueue=[],e.props.sprite.cache&&this.cacheSprite(),e.props.responsive&&(this.resizeListener=this.handleResize.bind(this),window.addEventListener("resize",this.resizeListener)),this.pointerDownListener=this.pointerDownHandler.bind(this),this.chessboard.element.addEventListener("mousedown",this.pointerDownListener),this.chessboard.element.addEventListener("touchstart",this.pointerDownListener),this.createSvgAndGroups(),this.updateMetrics(),t(),e.props.responsive&&setTimeout((()=>{this.handleResize()}))}pointerDownHandler(e){this.moveInput.onPointerDown(e)}destroy(){this.moveInput.destroy(),window.removeEventListener("resize",this.resizeListener),this.chessboard.element.removeEventListener("mousedown",this.pointerDownListener),this.chessboard.element.removeEventListener("touchstart",this.pointerDownListener),window.clearTimeout(this.resizeDebounce),window.clearTimeout(this.redrawDebounce),window.clearTimeout(this.drawPiecesDebounce),window.clearTimeout(this.drawMarkersDebounce),l.removeElement(this.svg),this.animationQueue=[],this.currentAnimation&&cancelAnimationFrame(this.currentAnimation.frameHandle)}cacheSprite(){const e="chessboardSpriteCache";if(!document.getElementById(e)){const t=document.createElement("div");t.style.display="none",t.id=e,document.body.appendChild(t);const s=new XMLHttpRequest;s.open("GET",this.chessboard.props.sprite.url,!0),s.onload=function(){t.insertAdjacentHTML("afterbegin",s.response)},s.send()}}createSvgAndGroups(){this.svg&&l.removeElement(this.svg),this.svg=l.createSvg(this.chessboard.element);let e=this.chessboard.props.style.cssClass?this.chessboard.props.style.cssClass:"default";this.svg.setAttribute("class","cm-chessboard border-type-"+this.chessboard.props.style.borderType+" "+e),this.updateMetrics(),this.boardGroup=l.addElement(this.svg,"g",{class:"board"}),this.coordinatesGroup=l.addElement(this.svg,"g",{class:"coordinates"}),this.markersGroup=l.addElement(this.svg,"g",{class:"markers"}),this.piecesGroup=l.addElement(this.svg,"g",{class:"pieces"})}updateMetrics(){this.width=this.chessboard.element.clientWidth,this.height=this.chessboard.element.clientHeight,this.chessboard.props.style.borderType===w.frame?this.borderSize=this.width/25:this.chessboard.props.style.borderType===w.thin?this.borderSize=this.width/320:this.borderSize=0,this.innerWidth=this.width-2*this.borderSize,this.innerHeight=this.height-2*this.borderSize,this.squareWidth=this.innerWidth/8,this.squareHeight=this.innerHeight/8,this.scalingX=this.squareWidth/this.chessboard.props.sprite.size,this.scalingY=this.squareHeight/this.chessboard.props.sprite.size,this.pieceXTranslate=this.squareWidth/2-this.chessboard.props.sprite.size*this.scalingY/2}handleResize(){window.clearTimeout(this.resizeDebounce),this.resizeDebounce=setTimeout((()=>{this.chessboard.props.style.aspectRatio&&(this.chessboard.element.style.height=this.chessboard.element.clientWidth*this.chessboard.props.style.aspectRatio+"px"),this.chessboard.element.clientWidth===this.width&&this.chessboard.element.clientHeight===this.height||(this.updateMetrics(),this.redraw()),this.svg.setAttribute("width","100%"),this.svg.setAttribute("height","100%")}))}redraw(){return new Promise((e=>{window.clearTimeout(this.redrawDebounce),this.redrawDebounce=setTimeout((()=>{this.drawBoard(),this.drawCoordinates(),this.drawMarkers(),this.setCursor()})),this.drawPiecesDebounced(this.chessboard.state.squares,(()=>{e()}))}))}drawBoard(){for(;this.boardGroup.firstChild;)this.boardGroup.removeChild(this.boardGroup.lastChild);if(this.chessboard.props.style.borderType!==w.none){if(l.addElement(this.boardGroup,"rect",{width:this.width,height:this.height}).setAttribute("class","border"),this.chessboard.props.style.borderType===w.frame){const e=this.borderSize;l.addElement(this.boardGroup,"rect",{x:e,y:e,width:this.width-2*e,height:this.height-2*e}).setAttribute("class","border-inner")}}for(let e=0;e<64;e++){const t=this.chessboard.state.orientation===u.white?e:63-e,s=`square ${0==(9*t&8)?"black":"white"}`,i=this.squareIndexToPoint(t),r=l.addElement(this.boardGroup,"rect",{x:i.x,y:i.y,width:this.squareWidth,height:this.squareHeight});r.setAttribute("class",s),r.setAttribute("data-index",""+t)}}drawCoordinates(){if(!this.chessboard.props.style.showCoordinates)return;for(;this.coordinatesGroup.firstChild;)this.coordinatesGroup.removeChild(this.coordinatesGroup.lastChild);const e=this.chessboard.props.style.borderType!==w.frame;for(let t=0;t<8;t++){let s=this.borderSize+(17+this.chessboard.props.sprite.size*t)*this.scalingX,i=this.height-3.5*this.scalingY,r="coordinate file";e&&(s+=15.5*this.scalingX,r+=t%2?" white":" black");const a=l.addElement(this.coordinatesGroup,"text",{class:r,x:s,y:i,style:`font-size: ${10*this.scalingY}px`});this.chessboard.state.orientation===u.white?a.textContent=String.fromCharCode(97+t):a.textContent=String.fromCharCode(104-t)}for(let t=0;t<8;t++){let s=this.borderSize/3.7,i=this.borderSize+25*this.scalingY+t*this.squareHeight,r="coordinate rank";e&&(r+=t%2?" black":" white",this.chessboard.props.style.borderType===w.frame?(s+=10*this.scalingX,i-=15*this.scalingY):(s+=2*this.scalingX,i-=15*this.scalingY));const a=l.addElement(this.coordinatesGroup,"text",{class:r,x:s,y:i,style:`font-size: ${10*this.scalingY}px`});this.chessboard.state.orientation===u.white?a.textContent=8-t:a.textContent=1+t}}drawPiecesDebounced(e=this.chessboard.state.squares,t){window.clearTimeout(this.drawPiecesDebounce),this.drawPiecesDebounce=setTimeout((()=>{this.drawPieces(e),t&&t()}))}drawPieces(e=this.chessboard.state.squares){for(;this.piecesGroup.firstChild;)this.piecesGroup.removeChild(this.piecesGroup.lastChild);for(let t=0;t<64;t++){const s=e[t];s&&this.drawPiece(t,s)}}drawPiece(e,t){const s=l.addElement(this.piecesGroup,"g");s.setAttribute("data-piece",t),s.setAttribute("data-index",e);const i=this.squareIndexToPoint(e),r=this.svg.createSVGTransform();r.setTranslate(i.x,i.y),s.transform.baseVal.appendItem(r);const a=this.chessboard.props.sprite.cache?"":this.chessboard.props.sprite.url,n=l.addElement(s,"use",{href:`${a}#${t}`,class:"piece"}),o=this.svg.createSVGTransform();o.setTranslate(this.pieceXTranslate,0),n.transform.baseVal.appendItem(o);const h=this.svg.createSVGTransform();return h.setScale(this.scalingY,this.scalingY),n.transform.baseVal.appendItem(h),s}setPieceVisibility(e,t=!0){const s=this.getPiece(e);t?s.setAttribute("visibility","visible"):s.setAttribute("visibility","hidden")}getPiece(e){return this.piecesGroup.querySelector(`g[data-index='${e}']`)}drawMarkersDebounced(){window.clearTimeout(this.drawMarkersDebounce),this.drawMarkersDebounce=setTimeout((()=>{this.drawMarkers()}),10)}drawMarkers(){for(;this.markersGroup.firstChild;)this.markersGroup.removeChild(this.markersGroup.firstChild);this.chessboard.state.markers.forEach((e=>{this.drawMarker(e)}))}drawMarker(e){const t=l.addElement(this.markersGroup,"g");t.setAttribute("data-index",e.index);const s=this.squareIndexToPoint(e.index),i=this.svg.createSVGTransform();i.setTranslate(s.x,s.y),t.transform.baseVal.appendItem(i);const r=this.chessboard.props.sprite.cache?"":this.chessboard.props.sprite.url,a=l.addElement(t,"use",{href:`${r}#${e.type.slice}`,class:"marker "+e.type.class}),n=this.svg.createSVGTransform();return n.setScale(this.scalingX,this.scalingY),a.transform.baseVal.appendItem(n),t}animatePieces(e,t,s){this.animationQueue.push({fromSquares:e,toSquares:t,callback:s}),this.animationRunning||this.nextPieceAnimationInQueue()}nextPieceAnimationInQueue(){const e=this.animationQueue.shift();void 0!==e&&(this.currentAnimation=new h(this,e.fromSquares,e.toSquares,this.chessboard.props.animationDuration/(this.animationQueue.length+1),(()=>{this.moveInput.draggablePiece||this.drawPieces(e.toSquares),this.nextPieceAnimationInQueue(),e.callback&&e.callback()})))}enableMoveInput(e,t){t===u.white?this.chessboard.state.inputWhiteEnabled=!0:(t===u.black||(this.chessboard.state.inputWhiteEnabled=!0),this.chessboard.state.inputBlackEnabled=!0),this.chessboard.state.inputEnabled=!0,this.moveInputCallback=e,this.setCursor()}disableMoveInput(){this.chessboard.state.inputWhiteEnabled=!1,this.chessboard.state.inputBlackEnabled=!1,this.chessboard.state.inputEnabled=!1,this.moveInputCallback=void 0,this.setCursor()}moveStartCallback(e){return!this.moveInputCallback||this.moveInputCallback({chessboard:this.chessboard,type:m.moveStart,square:d[e]})}moveDoneCallback(e,t){return!this.moveInputCallback||this.moveInputCallback({chessboard:this.chessboard,type:m.moveDone,squareFrom:d[e],squareTo:d[t]})}moveCanceledCallback(e,t){this.moveInputCallback&&this.moveInputCallback({chessboard:this.chessboard,type:m.moveCanceled,reason:e,square:t?d[t]:void 0})}setCursor(){this.chessboard.initialization.then((()=>{this.chessboard.state.inputWhiteEnabled||this.chessboard.state.inputBlackEnabled||this.chessboard.boardClickListener?this.boardGroup.setAttribute("class","board input-enabled"):this.boardGroup.setAttribute("class","board")}))}squareIndexToPoint(e){let t,s;return this.chessboard.state.orientation===u.white?(t=this.borderSize+e%8*this.squareWidth,s=this.borderSize+(7-Math.floor(e/8))*this.squareHeight):(t=this.borderSize+(7-e%8)*this.squareWidth,s=this.borderSize+Math.floor(e/8)*this.squareHeight),{x:t,y:s}}}class l{static createSvg(e){let t=document.createElementNS("http://www.w3.org/2000/svg","svg");return e&&(t.setAttribute("width","100%"),t.setAttribute("height","100%"),e.appendChild(t)),t}static addElement(e,t,s){let i=document.createElementNS("http://www.w3.org/2000/svg",t);"use"===t&&(s["xlink:href"]=s.href);for(let r in s)if(s.hasOwnProperty(r))if(-1!==r.indexOf(":")){const e=r.split(":");i.setAttributeNS("http://www.w3.org/1999/"+e[0],e[1],s[r])}else i.setAttribute(r,s[r]);return e.appendChild(i),i}static removeElement(e){e.parentNode.removeChild(e)}}class p{constructor(){this.squares=new Array(64).fill(void 0),this.orientation=void 0,this.markers=[]}setPiece(e,t){this.squares[e]=t}addMarker(e,t){this.markers.push({index:e,type:t})}removeMarkers(e,t){this.markers=e||t?this.markers.filter((s=>{if(s.type){if(e){if(s.type===t&&e===s.index)return!1}else if(s.type===t)return!1}else if(e===s.index)return!1;return!0})):[]}setPosition(e){if(e){const t=e.replace(/^\s*/,"").replace(/\s*$/,"").split(/\/|\s/);for(let e=0;e<8;e++){const s=t[7-e].replace(/\d/g,(e=>{const t=parseInt(e);let s="";for(let i=0;i<t;i++)s+="-";return s}));for(let t=0;t<8;t++){const i=s.substr(t,1);let r;"-"!==i&&(r=i.toUpperCase()===i?`w${i.toLowerCase()}`:`b${i}`),this.squares[8*e+t]=r}}}}getPosition(){let e=new Array(8).fill("");for(let t=0;t<8;t++){let s=0;for(let i=0;i<8;i++){const r=this.squares[8*t+i];if(void 0===r)s++;else{s>0&&(e[7-t]+=s,s=0);const i=r.substr(0,1),a=r.substr(1,1);e[7-t]+="w"===i?a.toUpperCase():a}}s>0&&(e[7-t]+=s,s=0)}return e.join("/")}squareToIndex(e){const t=e.substr(0,1).charCodeAt(0)-97;return 8*(e.substr(1,1)-1)+t}}const u={white:"w",black:"b"},m={moveStart:"moveStart",moveDone:"moveDone",moveCanceled:"moveCanceled"},b="primary",v="secondary",w={none:"none",thin:"thin",frame:"frame"},g={move:{class:"move",slice:"markerFrame"},emphasize:{class:"emphasize",slice:"markerSquare"},danger:{class:"danger",slice:"markerCircle"}},y="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";class I{constructor(e,t={}){if(!e)throw new Error("container element is "+e);this.element=e;let s={position:"empty",orientation:u.white,style:{cssClass:"default",showCoordinates:!0,borderType:w.thin,aspectRatio:1},responsive:!0,animationDuration:300,sprite:{url:"./assets/images/chessboard-sprite-staunty.svg",size:40,cache:!0}};t.style&&void 0!==t.style.showBorder&&(console.warn("style.showBorder is deprecated, use style.borderType instead"),t.style.showBorder?t.style.borderType=w.frame:t.style.borderType=w.thin),t.moveInputMode&&console.warn("`props.moveInputMode` is deprecated, you don't need it anymore"),this.props={},Object.assign(this.props,s),Object.assign(this.props,t),this.props.sprite=s.sprite,this.props.style=s.style,t.sprite&&Object.assign(this.props.sprite,t.sprite),t.style&&Object.assign(this.props.style,t.style),this.props.style.aspectRatio&&(this.element.style.height=this.element.offsetWidth*this.props.style.aspectRatio+"px"),this.state=new p,this.state.orientation=this.props.orientation,this.initialization=new Promise((e=>{this.view=new c(this,(()=>{"start"===this.props.position?this.state.setPosition(y):"empty"===this.props.position||void 0===this.props.position?this.state.setPosition("8/8/8/8/8/8/8/8"):this.state.setPosition(this.props.position),setTimeout((()=>{this.view.redraw().then((()=>{e()}))}))}))}))}setPiece(e,t){return new Promise((s=>{this.initialization.then((()=>{this.state.setPiece(this.state.squareToIndex(e),t),this.view.drawPiecesDebounced(this.state.squares,(()=>{s()}))}))}))}getPiece(e){return this.state.squares[this.state.squareToIndex(e)]}setPosition(e,t=!0){return new Promise((s=>{this.initialization.then((()=>{const i=this.state.getPosition();if(e.split(" ")[0]!==i){const i=this.state.squares.slice(0);"start"===e?this.state.setPosition(y):"empty"===e||void 0===e?this.state.setPosition("8/8/8/8/8/8/8/8"):this.state.setPosition(e),t?this.view.animatePieces(i,this.state.squares.slice(0),(()=>{s()})):(this.view.drawPiecesDebounced(),s())}else s()}))}))}getPosition(){return this.state.getPosition()}addMarker(e,t=g.emphasize){this.state.addMarker(this.state.squareToIndex(e),t),this.view.drawMarkersDebounced()}getMarkers(e,t){const s=[];return this.state.markers.forEach((i=>{const r=d[i.index];(!e&&(!t||t===i.type)||!t&&e===r||t===i.type&&e===r)&&s.push({square:d[i.index],type:i.type})})),s}removeMarkers(e,t){const s=e?this.state.squareToIndex(e):void 0;this.state.removeMarkers(s,t),this.view.drawMarkersDebounced()}setOrientation(e){this.state.orientation=e,this.view.redraw()}getOrientation(){return this.state.orientation}destroy(){return new Promise((e=>{this.initialization.then((()=>{this.view.destroy(),this.view=void 0,this.state=void 0,this.element.removeEventListener("contextmenu",this.contextMenuListener),e()}))}))}enableMoveInput(e,t){this.view.enableMoveInput(e,t)}disableMoveInput(){this.view.disableMoveInput()}enableContextInput(e){console.warn("enableContextInput is deprecated, use enableSquareSelect"),this.enableSquareSelect((function(t){t.type===v&&e(t)}))}disableContextInput(){this.disableSquareSelect()}enableSquareSelect(e){this.squareSelectListener?console.warn("squareSelectListener already existing"):(this.squareSelectListener=function(t){const s=t.target.getAttribute("data-index");"contextmenu"!==t.type?e({chessboard:this,type:2===t.button?v:b,square:d[s]}):t.preventDefault()},this.element.addEventListener("contextmenu",this.squareSelectListener),this.element.addEventListener("mouseup",this.squareSelectListener),this.element.addEventListener("touchend",this.squareSelectListener))}disableSquareSelect(){this.element.removeEventListener("contextmenu",this.squareSelectListener),this.element.removeEventListener("mouseup",this.squareSelectListener),this.element.removeEventListener("touchend",this.squareSelectListener),this.squareSelectListener=void 0}}export{u as C,m as I,I as a};
